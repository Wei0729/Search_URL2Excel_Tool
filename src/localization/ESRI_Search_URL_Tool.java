/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package localization;
import java.awt.Desktop;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
/**
 *
 * @author wei7771
 */
public class ESRI_Search_URL_Tool extends javax.swing.JFrame {
    public static final String userDir = System.getProperty("user.dir");
    /**
     * Creates new form ESRI_Search_URL_Tool
     */
    public ESRI_Search_URL_Tool() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        folderLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        FolderTextField = new javax.swing.JTextField();
        FolderBrowse = new javax.swing.JButton();
        ExcelLabel1 = new javax.swing.JLabel();
        ExcelTextField1 = new javax.swing.JTextField();
        ExcelBrowse1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        ExcelTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        Run = new javax.swing.JButton();
        OpenFolder = new javax.swing.JButton();
        LogFile = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ESRI_Search_URL2Excel_Tool");

        folderLabel.setText("Please select the language folder containing xml files to search:");

        jLabel1.setText("version 1.0");

        FolderBrowse.setText("Browse...");
        FolderBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FolderBrowseActionPerformed(evt);
            }
        });

        ExcelLabel1.setText("Please select the first Excel file:");

        ExcelBrowse1.setText("Browse..");
        ExcelBrowse1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExcelBrowse1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Please select the second Excel file:");

        jButton1.setText("Browse...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        Run.setText("Run");
        Run.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RunActionPerformed(evt);
            }
        });

        OpenFolder.setText("Open Folder");
        OpenFolder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenFolderActionPerformed(evt);
            }
        });

        LogFile.setText("Check Log File");
        LogFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogFileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ExcelLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(folderLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Run, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(63, 63, 63)
                                .addComponent(OpenFolder, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(70, 70, 70)
                                .addComponent(LogFile, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(FolderTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ExcelTextField1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ExcelTextField2, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(FolderBrowse, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                            .addComponent(ExcelBrowse1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(58, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(folderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FolderTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FolderBrowse))
                .addGap(28, 28, 28)
                .addComponent(ExcelLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ExcelTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ExcelBrowse1))
                .addGap(26, 26, 26)
                .addComponent(jLabel2)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ExcelTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(LogFile, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(OpenFolder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Run, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(77, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void FolderBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FolderBrowseActionPerformed
        // TODO add your handling code here:\
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int returnVal = chooser.showOpenDialog(this);
        if(returnVal == JFileChooser.APPROVE_OPTION){
           File folder = chooser.getSelectedFile();
           String folderPath = folder.getAbsolutePath();
           if(folderPath.endsWith("de") || folderPath.endsWith("DE") ||
              folderPath.endsWith("es") || folderPath.endsWith("ES") ||
              folderPath.endsWith("fr") || folderPath.endsWith("FR") || 
              folderPath.endsWith("ja") || folderPath.endsWith("JA") ||
              folderPath.endsWith("ru") || folderPath.endsWith("RU") ||
              folderPath.endsWith("zh-CN") || folderPath.endsWith("ZH-CN")){
               FolderTextField.setText(folderPath);
           }
           else{
               JOptionPane.showMessageDialog(this,"The folder you select is not the localized language folder.");
           }
               
        }
    }//GEN-LAST:event_FolderBrowseActionPerformed

    private void ExcelBrowse1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExcelBrowse1ActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Excel File","xlsx");
        chooser.setFileFilter(filter);
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        String filename = f.getAbsolutePath();
        if(filename.endsWith(".xlsx")){
             ExcelTextField1.setText(filename);
        }
        else{
          JOptionPane.showMessageDialog(this,"You need to select an Excel File.");  
        }
    }//GEN-LAST:event_ExcelBrowse1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Excel File","xlsx");
        chooser.setFileFilter(filter);
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        String filename = f.getAbsolutePath();
        if(filename.endsWith(".xlsx")){
             ExcelTextField2.setText(filename);
        }
        else{
          JOptionPane.showMessageDialog(this,"You need to select an Excel File.");  
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void OpenFolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenFolderActionPerformed
        // TODO add your handling code here:
        String folderpath1 = FolderTextField.getText();
        String folderpath = folderpath1.substring(0,folderpath1.lastIndexOf("\\")+1);
        if(folderpath.length() > 0){
            File folder = new File(folderpath.substring(0,folderpath.lastIndexOf("\\")));
            if(Desktop.isDesktopSupported()){
               try {
                   Desktop.getDesktop().open(folder);
                } catch (IOException ex) {
                    Logger.getLogger(ESRI_Search_URL_Tool.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        else{
            JOptionPane.showMessageDialog(this,"You need to select the source folder first."); 
        }
    }//GEN-LAST:event_OpenFolderActionPerformed

    private void LogFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogFileActionPerformed
        // TODO add your handling code here:
        String logfile = userDir + "\\log.txt";
        File logFolder = new File(logfile);
        if(Desktop.isDesktopSupported() && logFolder.exists()){
            try {
                Desktop.getDesktop().open(logFolder);
            }catch (IOException ex) {
                Logger.getLogger(ESRI_Search_URL_Tool.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
             JOptionPane.showMessageDialog(this,"The log file does not exist in user directory."); 
        }
    }//GEN-LAST:event_LogFileActionPerformed

    private void RunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RunActionPerformed
        // TODO add your handling code here:
        String folderpath = FolderTextField.getText();
        String ExcelFile1 = ExcelTextField1.getText();
        String ExcelFile2 = ExcelTextField2.getText();
        if(folderpath.length() > 0 && ExcelFile1.length() > 0 && ExcelFile2.length() > 0){
            try{
                checkURL ck = new checkURL();
                ck.check(ExcelFile1,ExcelFile2,folderpath);
                JOptionPane.showMessageDialog(this,"Task is done, please click \"open folder\" button to check the Excel report");
            }catch(Exception e){
                try{
                    File file = new File(userDir+"\\log.txt");
                    if(!file.exists()){
                       file.createNewFile();
                    }
                    FileWriter fw = new FileWriter(file.getAbsoluteFile());
                    BufferedWriter bw = new BufferedWriter(fw);
                    bw.write(e.getMessage());
                    bw.write(e.getLocalizedMessage());
                    bw.close();
                    fw.close();
                }catch(Exception e1){
                    e1.printStackTrace();
                }
                JOptionPane.showMessageDialog(this,"There is some problem, please click \"Check Log File\" to find the reason");
            }
        }
        else{
            JOptionPane.showMessageDialog(this,"You need to select the three options above first");
            System.exit(0); 
        }
    }//GEN-LAST:event_RunActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ESRI_Search_URL_Tool.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ESRI_Search_URL_Tool.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ESRI_Search_URL_Tool.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ESRI_Search_URL_Tool.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ESRI_Search_URL_Tool().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ExcelBrowse1;
    private javax.swing.JLabel ExcelLabel1;
    private javax.swing.JTextField ExcelTextField1;
    private javax.swing.JTextField ExcelTextField2;
    private javax.swing.JButton FolderBrowse;
    private javax.swing.JTextField FolderTextField;
    private javax.swing.JButton LogFile;
    private javax.swing.JButton OpenFolder;
    private javax.swing.JButton Run;
    private javax.swing.JLabel folderLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
